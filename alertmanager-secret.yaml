apiVersion: v1
data: {}
kind: Secret
metadata:
  name: alertmanager-main
  namespace: monitoring
stringData:
  alertmanager.yaml: |-
    "global":
      "resolve_timeout": "5m"
      "smtp_smarthost" : 'smtp.163.com:25'
      "smtp_from": '13237135897@163.com'
      "smtp_auth_username": '13237135897@163.com'
      "smtp_auth_password": 'liu881108'
      "smtp_hello": '163.com'
      "smtp_require_tls" : false
    "inhibit_rules":
     - "equal":
        - "namespace"
        - "alertname"
       "source_match":
          "severity": "critical"
       "target_match_re":
          "severity": "warning|info"
     - "equal":
        - "namespace"
        - "alertname"
       "source_match":
          "severity": "warning"
       "target_match_re":
          "severity": "info"
    "route":
      # 这里的标签列表是接收到告警信息后的重新分组标签 例如，在接收到的告警信息旦有许多具有 cluster=A alertname=LatncyHigh 标签的告警信息会被批盘聚合到 个分组里
      "group_by": ['alertname','cluster','job']
      #在一个新的告警分组被创建后，需要等待至少 group wait 时间来初始 通知，这种方式可以确保有足够的时间为同一分组获取多条告警，然后一起触发这条告警信息
      "group_wait": "30s"
      #在第 条告警发送后，等待 group_interval 时间来发送新的 组告警信息
      "group_interval": "5m"
      "receiver": "webhook"
      #上面的所有属性都由所有子路由继承 并且可以在每个子路由上覆盖
      "repeat_interval": "12h"
      #默认的 receiver 如果某条告警没有被 route 匹配， 发送给默认的接收器
      "routes":
       #- "receiver": "email"
       #  "group_wait": 10s
       
       - "receiver": "webhook"
         "group_wait": 10s
         #"match":
         #   "user": "prometheus"
          
    "receivers":
    # - "name": 'email'
    #   "email_configs":
    #    - "to": 'liuxiaolei@titi-go.com'
    #      "headers": { Subject: "[WARN] 报警邮件"} # 接收邮件的标题
    #      "send_resolved": true
     
     - "name": 'webhook'
       "webhook_configs":
        #- "url": 'http://dingtalk-hook.monitoring.svc.cluster.local:5000'
        - "url": 'http://dingtalk-hook.monitoring.svc.cluster.local:8060/dingtalk/webhook1/send'
          #"headers": { Subject: "[WARN] dev-测试报警"} # 接收邮件的标题
          "send_resolved": true

type: Opaque
